plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'org.sonarqube' version '2.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

processResources{
	exclude 'templates'
}

dependencies {
	//Spring Boot Main Dependency
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Database JPA, MySQL Connector, H2 inmemory database for testing
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'

	//Sending an email through spring boot(commented for future implementations)
	//implementation 'org.springframework.boot:spring-boot-starter-mail'

	//Authentication and Authorization JJWT(Java JSON Web Token)
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	implementation group: 'log4j', name: 'log4j', version: '1.2.17'

	//Testing with JUnit
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.4.2'
	//MockitoBDD
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
	implementation 'org.zalando:problem-spring-web-starter:0.26.2'

	//Integration Tests
	testImplementation 'org.springframework.integration:spring-integration-test'
			testImplementation 'org.springframework.security:spring-security-test'

	//Automatically generating getter and setter methods, overriding default methods
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}